#!/usr/bin/env python3
"""A script that combines exploitabilities of different runs into one file.

Usage:
    ./scripts/exploitability_combiner.py <starting-path>
"""
import json
import sys
from pathlib import Path
from typing import Any, Iterator

import matplotlib.pyplot as plt
import numpy as np
from matplotlib.colors import Colormap

from incomplete_cooperative.run.save import Output

CMAP = colormaps["inferno"]


def find_data_jsons(path: Path) -> Iterator[Path]:
    """Find all data.json files in the subdirectories."""
    if (path / "data.json").exists():
        yield path / "data.json"
        return

    for x in path.iterdir():
        if x.is_dir():
            yield from find_data_jsons(x)


def get_colors(number: int) -> Iterator:
    """Get colors from CMAP."""
    return map(CMAP, map(lambda x: (x + 1) / (number + 2), range(number)))


def add_to_plt(data: np.ndarray, name: str, color: Any) -> None:
    """Add data drawing to plot."""
    data_length = data.shape[0]
    mean = np.mean(data, 1)
    stde = np.std(data, 1)
    plt.plot(
        range(data_length), mean, color=color, zorder=3)
    plt.fill_between(
        range(data_length), mean + stde, mean - stde, color=color, zorder=3, alpha=0.3)


def draw_combined_graph(exploitabilities: list[tuple[str, np.ndarray]], output_path: Path) -> None:
    """Draw data into a combined graph."""
    colors = get_colors(len(exploitabilities))
    plt.grid(zorder=-1)
    for name, exploitability in exploitabilities:
        color = next(colors)
        add_to_plt(exploitability, name, color)
    plt.savefig(output_path)
    plt.close('all')


def main(path: Path) -> None:
    """Run the script."""
    for data in find_data_jsons(path):
        save_path = data.parent / "combined_exploitabilities.png"
        with data.open("r") as f:
            data_keys = json.load(f).keys()

        # a tuple (name, exploitabilities) of all runs
        exploitabilities = [(x, Output.from_file(data, x).exploitability) for x in data_keys]


if __name__ == '__main__':
    main(Path(sys.argv[1]))
